/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$icon-check-name: 'icon-check';
$icon-check-x: 0px;
$icon-check-y: 0px;
$icon-check-offset-x: 0px;
$icon-check-offset-y: 0px;
$icon-check-width: 29px;
$icon-check-height: 37px;
$icon-check-total-width: 104px;
$icon-check-total-height: 61px;
$icon-check-image: '../img/sprites/sprite.png';
$icon-check: (0px, 0px, 0px, 0px, 29px, 37px, 104px, 61px, '../img/sprites/sprite.png', 'icon-check', );
$icon-fb-name: 'icon-fb';
$icon-fb-x: 95px;
$icon-fb-y: 0px;
$icon-fb-offset-x: -95px;
$icon-fb-offset-y: 0px;
$icon-fb-width: 9px;
$icon-fb-height: 19px;
$icon-fb-total-width: 104px;
$icon-fb-total-height: 61px;
$icon-fb-image: '../img/sprites/sprite.png';
$icon-fb: (95px, 0px, -95px, 0px, 9px, 19px, 104px, 61px, '../img/sprites/sprite.png', 'icon-fb', );
$icon-question-name: 'icon-question';
$icon-question-x: 37px;
$icon-question-y: 0px;
$icon-question-offset-x: -37px;
$icon-question-offset-y: 0px;
$icon-question-width: 22px;
$icon-question-height: 20px;
$icon-question-total-width: 104px;
$icon-question-total-height: 61px;
$icon-question-image: '../img/sprites/sprite.png';
$icon-question: (37px, 0px, -37px, 0px, 22px, 20px, 104px, 61px, '../img/sprites/sprite.png', 'icon-question', );
$icon-skype-name: 'icon-skype';
$icon-skype-x: 0px;
$icon-skype-y: 45px;
$icon-skype-offset-x: 0px;
$icon-skype-offset-y: -45px;
$icon-skype-width: 16px;
$icon-skype-height: 16px;
$icon-skype-total-width: 104px;
$icon-skype-total-height: 61px;
$icon-skype-image: '../img/sprites/sprite.png';
$icon-skype: (0px, 45px, 0px, -45px, 16px, 16px, 104px, 61px, '../img/sprites/sprite.png', 'icon-skype', );
$icon-twitter-name: 'icon-twitter';
$icon-twitter-x: 67px;
$icon-twitter-y: 0px;
$icon-twitter-offset-x: -67px;
$icon-twitter-offset-y: 0px;
$icon-twitter-width: 20px;
$icon-twitter-height: 15px;
$icon-twitter-total-width: 104px;
$icon-twitter-total-height: 61px;
$icon-twitter-image: '../img/sprites/sprite.png';
$icon-twitter: (67px, 0px, -67px, 0px, 20px, 15px, 104px, 61px, '../img/sprites/sprite.png', 'icon-twitter', );
$icon-check-2x-name: 'icon-check@2x';
$icon-check-2x-x: 0px;
$icon-check-2x-y: 0px;
$icon-check-2x-offset-x: 0px;
$icon-check-2x-offset-y: 0px;
$icon-check-2x-width: 58px;
$icon-check-2x-height: 74px;
$icon-check-2x-total-width: 208px;
$icon-check-2x-total-height: 122px;
$icon-check-2x-image: '../img/sprites/sprite@2x.png';
$icon-check-2x: (0px, 0px, 0px, 0px, 58px, 74px, 208px, 122px, '../img/sprites/sprite@2x.png', 'icon-check@2x', );
$icon-fb-2x-name: 'icon-fb@2x';
$icon-fb-2x-x: 190px;
$icon-fb-2x-y: 0px;
$icon-fb-2x-offset-x: -190px;
$icon-fb-2x-offset-y: 0px;
$icon-fb-2x-width: 18px;
$icon-fb-2x-height: 38px;
$icon-fb-2x-total-width: 208px;
$icon-fb-2x-total-height: 122px;
$icon-fb-2x-image: '../img/sprites/sprite@2x.png';
$icon-fb-2x: (190px, 0px, -190px, 0px, 18px, 38px, 208px, 122px, '../img/sprites/sprite@2x.png', 'icon-fb@2x', );
$icon-question-2x-name: 'icon-question@2x';
$icon-question-2x-x: 74px;
$icon-question-2x-y: 0px;
$icon-question-2x-offset-x: -74px;
$icon-question-2x-offset-y: 0px;
$icon-question-2x-width: 44px;
$icon-question-2x-height: 40px;
$icon-question-2x-total-width: 208px;
$icon-question-2x-total-height: 122px;
$icon-question-2x-image: '../img/sprites/sprite@2x.png';
$icon-question-2x: (74px, 0px, -74px, 0px, 44px, 40px, 208px, 122px, '../img/sprites/sprite@2x.png', 'icon-question@2x', );
$icon-skype-2x-name: 'icon-skype@2x';
$icon-skype-2x-x: 0px;
$icon-skype-2x-y: 90px;
$icon-skype-2x-offset-x: 0px;
$icon-skype-2x-offset-y: -90px;
$icon-skype-2x-width: 32px;
$icon-skype-2x-height: 32px;
$icon-skype-2x-total-width: 208px;
$icon-skype-2x-total-height: 122px;
$icon-skype-2x-image: '../img/sprites/sprite@2x.png';
$icon-skype-2x: (0px, 90px, 0px, -90px, 32px, 32px, 208px, 122px, '../img/sprites/sprite@2x.png', 'icon-skype@2x', );
$icon-twitter-2x-name: 'icon-twitter@2x';
$icon-twitter-2x-x: 134px;
$icon-twitter-2x-y: 0px;
$icon-twitter-2x-offset-x: -134px;
$icon-twitter-2x-offset-y: 0px;
$icon-twitter-2x-width: 40px;
$icon-twitter-2x-height: 30px;
$icon-twitter-2x-total-width: 208px;
$icon-twitter-2x-total-height: 122px;
$icon-twitter-2x-image: '../img/sprites/sprite@2x.png';
$icon-twitter-2x: (134px, 0px, -134px, 0px, 40px, 30px, 208px, 122px, '../img/sprites/sprite@2x.png', 'icon-twitter@2x', );
$sp-sprite-width: 104px;
$sp-sprite-height: 61px;
$sp-sprite-image: '../img/sprites/sprite.png';
$sp-sprite-sprites: ($icon-check, $icon-fb, $icon-question, $icon-skype, $icon-twitter, );
$sp-sprite: (104px, 61px, '../img/sprites/sprite.png', $sp-sprite-sprites, );
$retina-spritesheet-width: 208px;
$retina-spritesheet-height: 122px;
$retina-spritesheet-image: '../img/sprites/sprite@2x.png';
$retina-spritesheet-sprites: ($icon-check-2x, $icon-fb-2x, $icon-question-2x, $icon-skype-2x, $icon-twitter-2x, );
$retina-spritesheet: (208px, 122px, '../img/sprites/sprite@2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$icon-check-group-name: 'icon-check';
$icon-check-group: ('icon-check', $icon-check, $icon-check-2x, );
$icon-fb-group-name: 'icon-fb';
$icon-fb-group: ('icon-fb', $icon-fb, $icon-fb-2x, );
$icon-question-group-name: 'icon-question';
$icon-question-group: ('icon-question', $icon-question, $icon-question-2x, );
$icon-skype-group-name: 'icon-skype';
$icon-skype-group: ('icon-skype', $icon-skype, $icon-skype-2x, );
$icon-twitter-group-name: 'icon-twitter';
$icon-twitter-group: ('icon-twitter', $icon-twitter, $icon-twitter-2x, );
$retina-groups: ($icon-check-group, $icon-fb-group, $icon-question-group, $icon-skype-group, $icon-twitter-group, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
